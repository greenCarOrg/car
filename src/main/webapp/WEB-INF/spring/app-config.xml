<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://www.springframework.org/schema/beans"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:task="http://www.springframework.org/schema/task"
       xmlns:jpa="http://www.springframework.org/schema/data/jpa" xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.1.xsd
                           http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.1.xsd
                           http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.1.xsd
                           http://www.springframework.org/schema/data/jpa http://www.springframework.org/schema/data/jpa/spring-jpa.xsd
                           http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task.xsd http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd">

    <!-- 使用annotation 自动注册bean,并保证@Required,@Autowired的属性被注入 -->
    <context:component-scan base-package="com.itee"/>
    <!--配置aop自动创建代理-->
    <aop:aspectj-autoproxy/>
    <task:annotation-driven/>

    <jpa:repositories base-package="com.itee.*.dao" transaction-manager-ref="transactionManager"
                      entity-manager-factory-ref="entityManagerFactory"
                      repository-impl-postfix="Impl"/>

    <!-- 定义受环境影响易变的变量 -->
    <bean class="com.itee.bingsheng.annotation.AnnotationBeanPostProcessor">
        <property name="systemPropertiesModeName" value="SYSTEM_PROPERTIES_MODE_OVERRIDE"/>
        <property name="ignoreResourceNotFound" value="true"/>
        <property name="locations">
            <list>
                <value>classpath:/application.properties</value>
                <value>classpath:/dbconfig.properties</value>
            </list>
        </property>
    </bean>

    <!-- 全局系统配置 -->
    <!--<bean id="dataSource" class="org.springframework.jndi.JndiObjectFactoryBean">-->
    <!--<property name="jndiName" value="${jndi.name}"/>-->
    <!--</bean>-->

    <!-- 数据源配置,使用应用内的Druid数据库连接池 -->
    <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close">
        <property name="driverClassName" value="${jdbc.driver}" />
        <property name="url" value="${jdbc.url}" />
        <property name="username" value="${jdbc.username}" />
        <property name="password" value="${jdbc.password}" />
        <!-- 配置初始化大小、最小、最大 -->
        <property name="initialSize" value="1" />
        <property name="minIdle" value="1" />
        <property name="maxActive" value="10" />

        <!-- 配置获取连接等待超时的时间 -->
        <property name="maxWait" value="10000" />

        <!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->
        <property name="timeBetweenEvictionRunsMillis" value="60000" />

        <!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->
        <property name="minEvictableIdleTimeMillis" value="300000" />

        <property name="testWhileIdle" value="true" />

        <!-- 这里建议配置为TRUE，防止取到的连接不可用 -->
        <property name="testOnBorrow" value="true" />
        <property name="testOnReturn" value="false" />

        <!-- 打开PSCache，并且指定每个连接上PSCache的大小 -->
        <property name="poolPreparedStatements" value="true" />
        <property name="maxPoolPreparedStatementPerConnectionSize" value="20" />

        <!-- 这里配置提交方式，默认就是TRUE，可以不用配置 -->
        <property name="defaultAutoCommit" value="true" />

        <!-- 验证连接有效与否的SQL，不同的数据配置不同 -->
        <property name="validationQuery" value="select 1 " />
        <property name="filters" value="stat" />
        <property name="proxyFilters">
            <list>
                <ref bean="logFilter" />
            </list>
        </property>
    </bean>
    <bean id="logFilter" class="com.alibaba.druid.filter.logging.Slf4jLogFilter">
        <property name="statementExecutableSqlLogEnable" value="false" />
    </bean>

    <!-- Jpa Entity Manager 配置 -->
    <bean id="entityManagerFactory" class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
        <property name="dataSource" ref="dataSource"/>
        <property name="jpaVendorAdapter" ref="hibernateJpaVendorAdapter"/>
        <property name="packagesToScan">
            <list>
                <value>com.itee.bingsheng.entity</value>
            </list>
        </property>
        <property name="jpaProperties">
            <props>
                <prop key="hibernate.cache.region.factory_class">${hibernate.cache.provider_class}</prop>
                <prop key="hibernate.ejb.naming_strategy">com.itee.bingsheng.orm.UnderscoresNamingStrategy</prop>
                <prop key="hibernate.format_sql">${hibernate.format_sql}</prop>
                <!-- 配置 hibernate boolean型与 数据库 char(1) 的映射 -->
                <prop key="query.substitutions">true 1,false 0</prop>
                <!-- 打开hibernate统计功能，测试中使用hibernate的统计类 -->
                <prop key="hibernate.generate_statistics">${hibernate.generate_statistics}</prop>
            </props>
        </property>
        <property name="jpaDialect">
            <bean class="org.springframework.orm.jpa.vendor.HibernateJpaDialect"/>
        </property>
        <property name="loadTimeWeaver">
            <bean class="org.springframework.instrument.classloading.InstrumentationLoadTimeWeaver"/>
        </property>
    </bean>

    <bean id="hibernateJpaVendorAdapter" class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter">
        <property name="database" value="MYSQL"/>
        <property name="showSql" value="${hibernate.show_sql}"/>
        <property name="generateDdl" value="false"/>
    </bean>

    <bean id="defaultLobHandler" class="org.springframework.jdbc.support.lob.DefaultLobHandler" lazy-init="true"/>


    <!--事务管理器配置,单数据源事务 -->
    <bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
        <property name="entityManagerFactory" ref="entityManagerFactory"/>
    </bean>

    <!-- 使用annotation定义事务 -->
    <tx:annotation-driven transaction-manager="transactionManager" proxy-target-class="true"/>

    <bean id="messageSource"
          class="com.itee.bingsheng.support.CustomResourceBundleMessageSource">
        <property name="cacheSeconds" value="30"/>
        <property name="defaultEncoding" value="UTF-8"/>
        <property name="useCodeAsDefaultMessage" value="true"/>
    </bean>
    <bean id ="taskExecutor" class="org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor" >
        <property name ="corePoolSize" value ="5" />
        <property name ="keepAliveSeconds" value ="300" />
        <property name ="maxPoolSize" value ="10" />
        <property name ="queueCapacity" value ="25" />
    </bean>
    <!-- 定时任务：获取考勤信息 -->
    <!--<task:scheduled-tasks>-->
        <!--<task:scheduled ref="attendanceTask" method="getCheckDataTask"-->
                        <!--cron="0 * */1 * * ?"/>-->
    <!--</task:scheduled-tasks>-->

    <!-- 定时任务：自动确认 -->
    <!--<task:scheduled-tasks>-->
        <!--<task:scheduled ref="parentUndeterminedTask" method="autoDetermine"-->
                        <!--cron="0 0/5 * * * ?"/>-->
    <!--</task:scheduled-tasks>-->

    <!-- mybatis配置 -->
    <import resource="spring-mybatis.xml"/>
    <!-- 支付配置 -->
    <import resource="pay-context.xml"/>
</beans>